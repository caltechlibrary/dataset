.\" Automatically generated by Pandoc 3.1.4
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "dsquery" "1" "2023-10-09" "dataset user manual" "version 2.1.8 b048b3d"
.hy
.SH NAME
.PP
dsquery
.SH SYNOPSIS
.PP
dsquery OPTIONS C_NAME SQL_STATEMENT [PARAMS]
.SH DESCRIPTION
.PP
\f[B]dsquery\f[R] is a tool to support SQL queries of dataset
collections.
Pairtree based collections should be index before trying to query them
(see `-index' option below).
Pairtree collections use the SQLite 3 dialect of SQL for querying them.
For collections using a SQL storage engine (e.g.\ SQLite3, Postgres and
MySQL), the SQL dialect used is that of the SQL storage engine chosen.
.PP
The schema is the same for all storage engines.
The scheme for the JSON stored documents have a four column scheme.
The columns are \[lq]_key\[rq], \[lq]created\[rq], \[lq]updated\[rq] and
\[lq]src\[rq].
\[lq]_key\[rq] is a string (aka VARCHAR), \[lq]created\[rq] and
\[lq]updated\[rq] are timestamps while \[lq]src\[rq] is a JSON column
holding the JSON document.
The table name reflects the collection name without the \[lq].ds\[rq]
extension (e.g.\ data.ds is stored in a database called data having a
table also called data).
.PP
The output of \f[B]dsquery\f[R] is a JSON arrary of objects.
The order of the objects is determined by the your SQL statement and SQL
engine.
There is an option to generate a 2D grid of values and CSV format are
also supported as options (see `-grid' and `-csv' below).
.SH PARAMETERS
.TP
C_NAME
If harvesting the dataset collection name to harvest the records to.
.TP
SQL_STATEMENT
The SQL statement should conform to the SQL dialect used for the JSON
store for the JSON store (e.g.\ Postgres, MySQL and SQLite 3).
The SELECT clause should return a single JSON object type per row.
\f[B]dsquery\f[R] returns an JSON array of JSON objects returned by the
SQL query.
.TP
PARAMS
Is optional, it is any values you want to pass to the SQL_STATEMENT.
.SH SQL Store Scheme
.TP
_key
The key or id used to identify the JSON documented stored.
.TP
src
This is a JSON column holding the JSON document
.TP
created
The date the JSON document was created in the table
.TP
updated
The date the JSON document was updated
.SH OPTIONS
.TP
-help
display help
.TP
-license
display license
.TP
-version
display version
.TP
-pretty
pretty print the resulting JSON array
.TP
-sql SQL_FILENAME
read SQL from a file.
If filename is \[lq]-\[rq] then read SQL from standard input.
.TP
-grid STRING_OF_ATTRIBUTE_NAMES
Returns list as a 2D grid of values.
This options requires a comma delimited string of attribute names for
the outer object to include in grid output.
It can be combined with -pretty options.
.TP
-csv STRING_OF_ATTRIBUTE_NAMES
Like -grid this takes our list of dataset objects and a list of
attribute names but rather than create a 2D JSON array of values it
creates CSV represnetation with the first row as the attribute names.
.TP
-index
This will create a SQLite3 index for a collection.
This enables dsquery to query pairtree collections using SQLite3 SQL
dialect just as it would for SQL storage collections (i.e.\ don\[cq]t
use with postgres, mysql or sqlite based dataset collections.
It is not needed for them).
Note the index is always built before executing the SQL statement.
.SH EXAMPLES
.PP
Generate a list of JSON objects with the \f[V]_key\f[R] value merged
with the object stored as the \f[V]._Key\f[R] attribute.
The colllection name \[lq]data.ds\[rq] which is implemented using
Postgres as the JSON store.
(note: in Postgres the \f[V]||\f[R] is very helpful).
.IP
.nf
\f[C]
dsquery data.ds \[dq]SELECT jsonb_build_object(\[aq]_Key\[aq], _key)::jsonb || src::jsonb FROM data\[dq]
\f[R]
.fi
.PP
In this example we\[cq]re returning the \[lq]src\[rq] in our collection
by querying for a \[lq]id\[rq] attribute in the \[lq]src\[rq] column.
The id is passed in as an attribute using the Postgres positional
notatation in the statement.
.IP
.nf
\f[C]
dsquery data.ds \[dq]SELECT src FROM data WHERE src->>\[aq]id\[aq] = $1 LIMIT 1\[dq] \[dq]xx103-3stt9\[dq]
\f[R]
.fi
.SH AUTHORS
R. S. Doiel and Tom Morrell.
